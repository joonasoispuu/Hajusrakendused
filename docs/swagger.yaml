openapi: 3.0.2
info:
    title: Hotel-API
    version: 1.0.0
    description: this is a swagger for my Hotel API
paths:
    /guests:
        get:
            tags:
                - get-details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of guests:
                                    value:
                                        - Pablo Gonzalez
                                        - John Man
                    description: Returns a list of all guests
            summary: Get a list of all guests
            description: |
                Returns a list of all guests
        post:
            requestBody:
                description: A new guest to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-guest'
                required: true
            tags:
                - Create
            responses:
                '201':
                    description: The guest has been successfully added
                '400':
                    description: One or all params are missing
            summary: Creates a guest
            description: Creates a new guest
    '/guests/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of guest:
                                    value: "    { GuestID: 1, FirstName: \"Pablo\", LastName: \"Gonzalez\", PhoneNumber: \"523456789\", EmailAddress: \"Gonzales12@gmail.com.com\" },\r\n"
                    description: Returns full details of given guest
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Guest /w+ was not found:
                                    value:
                                        error: Guest \w+ was not found in game array
                    description: Guest was not found
            summary: Get full details of a guest
            description: Returns full details of the guest given
        put:
            requestBody:
                description: Update a users details
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-guests-details'
                required: true
            tags:
                - change-details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    description: The updates were made successfully
                '400':
                    description: |
                        Failed to update the guest
                '404':
                    description: No guests exist with that id
            summary: Change guests details
            description: Change guests details by id
        delete:
            tags:
                - Delete
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-guest'
                    description: Successfully deleted the guest!
                '400':
                    description: Failed to delete the guest!
                '404':
                    description: No guest by that Id was found
            summary: Delete a guest
            description: Deletes a guest by the Id
    /bookings:
        get:
            tags:
                - get-details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of rooms:
                                    value:
                                        RoomNumber: 101A
                                        CheckInDate: 'December 17, 2023 08:24:00'
                                        CheckOutDate: 'December 20, 2023 08:24:00'
                                        Status: Occupied
                    description: Returns a list of all bookings
            summary: Get a list of all room bookings
            description: |
                Returns a list of all bookings
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-room'
                required: true
            tags:
                - Create
            responses:
                '201':
                    description: The booking has been successfully added
                '400':
                    description: One or all params are missing
                '404':
                    description: Roomnumber or GuestID doesnt exist
                '409':
                    description: There is already a booking with that RoomNumber or GuestId
                '500':
                    description: Something went wrong
            summary: Creates a Booking
            description: Creates a new booking
    '/bookings/{id}':
        description: ''
        get:
            tags:
                - details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of room:
                                    value:
                                        GuestId: '1'
                                        RoomNumber: '40'
                                        CheckInDate: 'December 17, 2023 08:24:00'
                                        CheckOutDate: 'December 20, 2023 08:24:00'
                                        Status: Occupied
                    description: |
                        Returns full details of given booking
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: Did not find an room with that id
                    description: booking was not found
            summary: Gets full details of a room booking
            description: |
                Return full details of a rooms booking
        put:
            requestBody:
                description: |
                    Update rooms details
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-room-details'
                required: true
            tags:
                - change-details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    description: The updates were made successfully
                '400':
                    description: |
                        Failed to update the booking
                '404':
                    description: No bookings exist with that id
            summary: Change bookings details
            description: Change bookings details by id
        delete:
            tags:
                - Delete
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-guest'
                    description: Successfully deleted the booking!
                '400':
                    description: Failed to delete the booking!
                '404':
                    description: No bookings by that Id were found
            summary: Delete a booking
            description: Deletes booking by the Id
    /rooms:
        get:
            tags:
                - get-details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of rooms:
                                    value:
                                        RoomNumber: 101A
                                        DailyCost: 150
                                        Status: Available
                    description: Returns a list of all rooms
            summary: Get a list of all rooms
            description: Returns a list of all rooms
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-realroom'
                required: true
            tags:
                - Create
            responses:
                '201':
                    description: The room has been successfully added
                '400':
                    description: One or all params are missing
                '409':
                    description: There is already a Room with that Roomnumber
            summary: Creates a Room
            description: Creates a new room
    '/rooms/{RoomNumber}':
        get:
            tags:
                - details
            parameters:
                -
                    name: RoomNumber
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                full details of a room by roomnumber:
                                    value:
                                        DailyCost: 150
                                        Status: Available
                    description: Returns full details of given room
                '404':
                    description: Room was not found by the room number
            summary: Get full details of a room
            description: Returns full details of the rooms given
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-rooms-details'
                required: true
            tags:
                - change-details
            parameters:
                -
                    name: RoomNumber
                    in: path
                    required: true
            responses:
                '200':
                    description: The updates were made successfully
                '400':
                    description: |
                        Failed to update the room
                '404':
                    description: No rooms exist with that room number
                '500':
                    description: Unknown error
            summary: Change rooms details
            description: Change rooms details by room number
        delete:
            tags:
                - Delete
            parameters:
                -
                    name: RoomNumber
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-room-real'
                    description: Successfully deleted the room!
                '400':
                    description: Failed to delete the room!
                '404':
                    description: No room by that room number was found
            summary: Delete a room
            description: Delete a room by the room number
    /meals:
        get:
            tags:
                - get-details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of meals:
                                    value:
                                        id: 1
                                        MealName: French Fries
                                        Price: 1.49
                    description: |
                        Returns a full list of meals
            summary: Get a list of all meals
            description: |
                Returns a list of all meals
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-meal'
                required: true
            tags:
                - Create
            responses:
                '201':
                    description: The meal has been successfully added
                '400':
                    description: One or all params are missing
                '404':
                    description: There is already a meal with that MealName
            summary: Creates a meal
            description: |
                Creates a new meal
    '/meals/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a meal:
                                    value:
                                        id: 1
                                        MealName: French Fries
                                        Price: 1.49
                    description: Returns full details of given meal
                '404':
                    description: Meal was not found
            summary: Get full details of a meal
            description: |
                Returns full details of the meal given
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update-meals-details'
                required: true
            tags:
                - change-details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    description: The updates were made successfully
                '400':
                    description: |
                        Failed to update the meal
                '404':
                    description: No meal exists with that id
            summary: Change meals details
            description: Change meals details by id
        delete:
            tags:
                - Delete
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-meal'
                    description: |
                        Succesfully deleted the meal
                '400':
                    description: |
                        Failed to delete the meal
                '404':
                    description: No meal by that Id was found
            summary: Delete a meal
            description: Deletes a meal by the Id
    /mealorders:
        get:
            tags:
                - get-details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of meal orders:
                                    value:
                                        id: 1
                                        BookingId: 1
                                        MealId: 2
                                        OrderDate: '2023-11-08T19:20:30+01:00'
                                        Status: Ordered
                    description: Returns a list of all mealorders
            summary: Get a list of all mealorders
            description: |
                Returns a list of all mealorders
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-mealorder'
                required: true
            tags:
                - Create
            responses:
                '201':
                    description: The mealorder has been successfully added
                '400':
                    description: One or all params are missing
            summary: Creates a mealorder
            description: |
                Creates a new mealorder
    '/mealorders/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a meal order:
                                    value:
                                        BookingId: 1
                                        MealId: 2
                                        OrderDate: '2023-11-08T19:20:30+01:00'
                                        Status: Ordered
                    description: Returns full details of given meal order
                '400':
                    description: s
                '404':
                    description: No meal order was found by that id
            summary: Get full details of a mealorder
            description: Returns full details of a meal order
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error Message.
        new-guest:
            title: Root Type for new-guest
            description: For adding new guests
            required:
                - PhoneNumber
                - EmailAddress
                - FirstName
                - LastName
            type: object
            properties:
                FirstName:
                    type: string
                LastName:
                    type: string
                PhoneNumber:
                    maximum: 999999999
                    minimum: 100000000
                    type: integer
                EmailAddress:
                    type: string
            example:
                FirstName: Joonas
                LastName: Oispuu
                PhoneNumber: '1234567890'
                EmailAddress: s@gmail.com
        delete-guest:
            description: Delete guest by Id
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
        update-guests-details:
            description: update a guests details by their id
            type: object
            properties:
                EmailAddress:
                    description: ''
                    type: string
                FirstName:
                    description: ''
                    type: string
                LastName:
                    description: ''
                    type: string
                PhoneNumber:
                    description: ''
                    type: integer
            example:
                FirstName: Joonas
                LastName: Oispuu
                PhoneNumber: '1234567890'
                EmailAddress: s@gmail.com
        new-room:
            description: for adding new rooms
            required:
                - GuestId
                - RoomNumber
                - CheckInDate
                - CheckOutDate
                - Status
            type: object
            properties:
                GuestId:
                    description: the guests id (primary key)
                    type: integer
                RoomNumber:
                    description: the roomnumber (primary key)
                    type: integer
                CheckInDate:
                    description: ''
                    type: string
                    example: 'December 17, 2023 08:24:00'
                CheckOutDate:
                    description: ''
                    type: string
                    example: 'December 17, 2023 08:24:00'
                Status:
                    description: ''
                    type: string
            example:
                GuestId: '1'
                RoomNumber: 101A
                CheckInDate: 'December 16, 2023 01:25:00'
                CheckOutDate: 'December 21, 2023 08:24:00'
                Status: Occupied
        date:
            description: date time
            type: object
        update-room-details:
            title: Root Type for update-room-details
            description: update a rooms details by their id
            type: object
            properties:
                GuestId:
                    type: string
                RoomNumber:
                    type: string
                CheckInDate:
                    type: string
                CheckOutDate:
                    type: string
                Status:
                    type: string
            example:
                GuestId: '5'
                RoomNumber: '43'
                CheckInDate: 'December 15, 2023 12:24:00'
                CheckOutDate: 'December 22, 2023 08:24:00'
                Status: Occupied
        delete-room:
            title: Root Type for delete-room
            description: Delete guest by Id
            type: object
            properties:
                id:
                    format: int32
                    type: integer
            example:
                id: 1
        new-realroom:
            description: for adding new rooms
            required:
                - DailyCost
                - Status
                - RoomNumber
            type: object
            properties:
                DailyCost:
                    format: float
                    description: ''
                    type: number
                Status:
                    description: ''
                    type: string
                RoomNumber:
                    description: ''
                    type: string
            example:
                RoomNumber: 101A
                DailyCost: 150
                Status: Available
        update-rooms-details:
            description: update a rooms details by the room number
            required: []
            type: object
            properties:
                DailyCost:
                    format: float
                    description: ''
                    type: number
                Status:
                    description: ''
                    type: string
            example:
                DailyCost: 150
                Status: Available
        delete-room-real:
            description: delete a room by the room number
            required:
                - RoomNumber
            type: object
            properties:
                RoomNumber:
                    description: ''
                    type: string
            example: |-
                {
                    "RoomNumber": 101A
                }
        new-meal:
            description: for adding new meals
            required:
                - MealName
                - Price
            type: object
            properties:
                MealName:
                    description: ''
                    type: string
                Price:
                    format: float
                    description: ''
                    type: number
            example:
                MealName: French Fries
                Price: 1.49
        update-meals-details:
            description: for updating a meals details by id
            required:
                - MealName
                - Price
            type: object
            properties:
                MealName:
                    description: ''
                    type: string
                Price:
                    format: float
                    description: ''
                    type: number
            example:
                MealName: French Fries
                Price: 1.49
        delete-meal:
            description: Delete meal by id
            required:
                - id
            type: object
            properties:
                id:
                    format: int32
                    description: ''
                    type: integer
            example:
                id: 1
        new-mealorder:
            description: ''
            required:
                - BookingID
                - MealID
                - OrderDate
                - Status
            type: object
            properties:
                BookingID:
                    description: ''
                    type: integer
                MealID:
                    description: ''
                    type: integer
                OrderDate:
                    format: date
                    description: ''
                    type: string
                Status:
                    description: ''
                    type: string
            example:
                BookingID: 1
                MealID: 1
                Status: Ordered
